name: CI

on: [push, pull_request]

jobs:
  testing:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install beautifulsoup4
        working-directory: ./backend

      - name: Run tests with coverage
        run: |
          mkdir -p uploads  # Ensure the upload folder exists if needed
          pytest --cov=./ --cov-report=term-missing --cov-report=html --cov-report=xml
        working-directory: ./backend

      - name: Upload coverage data and report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-data
          path: ./backend/htmlcov

      - name: Add coverage summary to Actions run
        if: always()
        run: |
          python - <<'PY'
          import os, sys, pathlib, textwrap
          from bs4 import BeautifulSoup

          html_path = pathlib.Path("backend/htmlcov/index.html")
          if not html_path.exists():
              print("No HTML coverage report found, skipping summary.")
              sys.exit(0)

          with open(html_path, encoding='utf-8') as f:
              soup = BeautifulSoup(f, "html.parser")

          table = soup.find("table", class_="index")
          if not table:
              print("Coverage table not found.")
              sys.exit(1)

          rows = table.find_all("tr")[1:]  # skip header
          file_coverage_data = []

          for row in rows:
              cols = row.find_all("td")
              if len(cols) < 5:
                  continue
              file_name = cols[0].text.strip()
              coverage = cols[4].text.strip()
              file_coverage_data.append((file_name, coverage))

          total = next((row for row in file_coverage_data if row[0].lower() == "total"), None)
          file_coverage_data = [row for row in file_coverage_data if row[0].lower() != "total"]

          summary_md = "### 🧪 Coverage per File\n\n"
          summary_md += "| File | Coverage |\n"
          summary_md += "|------|----------|\n"
          for file_name, cov in file_coverage_data:
              summary_md += f"| {file_name} | {cov} |\n"

          if total:
              summary_md += f"\n**Total Coverage:** **{total[1]}**\n\n"

          summary_md += "_Full HTML report available in the “Artifacts” section (html-coverage)._"

          with open(os.environ["GITHUB_STEP_SUMMARY"], "a", encoding="utf-8") as fh:
              fh.write(summary_md)
          PY